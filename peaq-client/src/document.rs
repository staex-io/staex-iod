// This file is @generated by prost-build.
#[derive(serde::Serialize, serde::Deserialize)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VerificationMethod {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(enumeration = "VerificationType", tag = "2")]
    pub r#type: i32,
    #[prost(string, tag = "3")]
    pub controller: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub public_key_multibase: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Signature {
    #[prost(enumeration = "VerificationType", tag = "1")]
    pub r#type: i32,
    #[prost(string, tag = "2")]
    pub issuer: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub hash: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Service {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub r#type: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub service_endpoint: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub data: ::prost::alloc::string::String,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Document {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub controller: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "3")]
    pub verification_methods: ::prost::alloc::vec::Vec<VerificationMethod>,
    #[prost(message, optional, tag = "4")]
    pub signature: ::core::option::Option<Signature>,
    #[prost(message, repeated, tag = "5")]
    pub services: ::prost::alloc::vec::Vec<Service>,
    #[prost(string, repeated, tag = "6")]
    pub authentications: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum VerificationType {
    Ed25519VerificationKey2020 = 0,
    Sr25519VerificationKey2020 = 1,
}
impl VerificationType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            VerificationType::Ed25519VerificationKey2020 => "Ed25519VerificationKey2020",
            VerificationType::Sr25519VerificationKey2020 => "Sr25519VerificationKey2020",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "Ed25519VerificationKey2020" => Some(Self::Ed25519VerificationKey2020),
            "Sr25519VerificationKey2020" => Some(Self::Sr25519VerificationKey2020),
            _ => None,
        }
    }
}
